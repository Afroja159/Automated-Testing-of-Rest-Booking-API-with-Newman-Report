{
	"info": {
		"_postman_id": "cdc16320-b9d8-4792-8253-fa078bb41c6f",
		"name": "Booking_System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26561979",
		"_collection_link": "https://it-training.postman.co/workspace/IT-Training-Practice~fa05da60-9c6e-4be8-985c-c868c020c0d8/collection/26561979-cdc16320-b9d8-4792-8253-fa078bb41c6f?action=share&source=collection_link&creator=26561979"
	},
	"item": [
		{
			"name": "Booking – Create Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"totalPrice\", totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"depositPaid\", depositPaid)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"// console.log(today.add(5, 'd').add(1, 'M').add(1, 'Y').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today.subtract(5, 'd').format(\"YYYY-MM-DD\"))\r",
							"var checkIn = today.add(2, 'd').add(1, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkIn\", checkIn)\r",
							"\r",
							"var checkOut = today.add(10, 'd').add(1, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkOut\", checkOut)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomLoremWord}}\")\r",
							"console.log(additionalNeeds)\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\", jsonData.bookingid)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkIn}}\",\r\n    \t\"checkout\" : \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking – Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"})\r",
							"pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"})\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(jsonData.totalprice.toString()).to.eql(pm.environment.get(\"totalPrice\"))\r",
							"})\r",
							"pm.test(\"Deposit Paid Validation\", function(){\r",
							"    pm.expect(jsonData.depositpaid.toString()).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify Check in Date\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkIn\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify Check out Date\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkOut\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Needs\", function(){\r",
							"    pm.expect(jsonData.additionalneeds.toString()).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth – Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"token\", jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking – Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"updated_firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"updated_lastName\", lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalPrice)\r",
							"pm.environment.set(\"updated_totalPrice\", totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositPaid)\r",
							"pm.environment.set(\"updated_depositPaid\", depositPaid)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"// console.log(today.add(5, 'd').add(1, 'M').add(1, 'Y').format(\"YYYY-MM-DD\"))\r",
							"// console.log(today.subtract(5, 'd').format(\"YYYY-MM-DD\"))\r",
							"var checkIn = today.add(2, 'd').add(1, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkIn\", checkIn)\r",
							"\r",
							"var checkOut = today.add(10, 'd').add(1, 'M').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"updated_checkOut\", checkOut)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomLoremWord}}\")\r",
							"console.log(additionalNeeds)\r",
							"pm.environment.set(\"updated_additionalNeeds\", additionalNeeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkIn}}\",\r\n    \t\"checkout\" : \"{{checkOut}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"updated_firstName\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"updated_lastName\"))\r",
							"})\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(jsonData.totalprice.toString()).to.eql(pm.environment.get(\"updated_totalPrice\"))\r",
							"})\r",
							"pm.test(\"Deposit Paid Validation\", function(){\r",
							"    pm.expect(jsonData.depositpaid.toString()).to.eql(pm.environment.get(\"updated_depositPaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify Check in Date\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"updated_checkIn\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Verify Check out Date\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"updated_checkOut\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Needs\", function(){\r",
							"    pm.expect(jsonData.additionalneeds.toString()).to.eql(pm.environment.get(\"updated_additionalNeeds\"))\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Not Found\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}